#BlueJ class context
comment0.target=registerUser
comment0.text=\r\n\ Class\ to\ register\ a\ new\ user.\r\n\ \r\n\ @author\ Jo\u00E3o\ Silva\ \r\n\ @version\ 01/02/2023\r\n
comment1.params=
comment1.target=void\ registerUsernameComplete()
comment1.text=\r\n\ Register\ a\ new\ user\r\n
comment2.params=conn
comment2.target=java.lang.String[]\ register(java.sql.Connection)
comment2.text=\r\n\ Register\ main\ method\ -\ Asks\ the\ user\ for\ a\ name,\ e-mail\ and\ password\ and\r\n\ returns\ the\ user's\ credentials\ to\ be\ used\ in\ other\ methods.\r\n\ \r\n\ @param\ conn\ a\ connection\ to\ the\ database\r\n\ @return\ an\ array\ containing\ the\ user's\ credentials\r\n
comment3.params=conn\ column\ table
comment3.target=java.lang.String\ idGetter(java.sql.Connection,\ java.lang.String,\ java.lang.String)
comment4.params=
comment4.target=java.lang.String[]\ sizesGetter()
comment5.params=goalOption
comment5.target=java.lang.String[]\ goalGetter(boolean)
comment6.params=input
comment6.target=java.lang.String\ validDouble(java.lang.String)
comment6.text=\r\n\ A\ method\ to\ validate\ if\ a\ string\ can\ be\ parsed\ to\ a\ double\ value\r\n\ @param\ input\ -\ the\ input\ string\ to\ be\ validated\r\n\ @return\ -\ the\ input\ string\ if\ it\ can\ be\ parsed\ to\ double,\ or\ "error"\ if\ the\ input\ is\ invalid\r\n
comment7.params=contOrExit
comment7.target=void\ contOrExitFunc(boolean)
comment8.params=info
comment8.target=java.lang.String\ userCheck(java.lang.String)
comment9.params=infos
comment9.target=void\ createUser(java.lang.String[])
numComments=10
